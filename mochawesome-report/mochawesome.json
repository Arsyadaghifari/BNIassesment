{
  "stats": {
    "suites": 8,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-01T07:29:55.445Z",
    "end": "2023-09-01T07:29:58.550Z",
    "duration": 3105,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6cf15182-f38a-4e78-bdeb-4ecb94ce5d97",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8788a573-a298-4428-a502-54c0221fff37",
          "title": "Positive - Post New User",
          "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response status equal to 201",
              "fullTitle": "Positive - Post New User Response status equal to 201",
              "timedOut": false,
              "duration": 593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(url)\n  .post(`/public/v2/users?access-token=${TOKEN}`)\n  .send({\n    \"email\": \"usertest007@mail.com\",\n    \"name\": \"USER TEST7\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n  });\nuserId = response.body.id;\nuserName =  response.body.name;\nuserEmail =  response.body.email;\nconsole.log('User ID:', userId);\nconsole.log('User Name:', userName);\nconsole.log('User Email:', userEmail);\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "1ff05cc6-23c3-4e76-a030-b3f71af1e363",
              "parentUUID": "8788a573-a298-4428-a502-54c0221fff37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ff05cc6-23c3-4e76-a030-b3f71af1e363"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 593,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7ced3bb-f2d2-48c0-a4ab-a917f0b97dfc",
          "title": "Negative - Post New User",
          "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Expected the POST request to fail",
              "fullTitle": "Negative - Post New User Expected the POST request to fail",
              "timedOut": false,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(url)\n  .post(`/public/v2/users?access-token=${TOKEN}`)\n  .send({\n    \"email\": \"....\",\n    \"name\": \"USER TEST1\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n  });\n  expect(response.status).to.equal(422);\n  console.log('User ID:', userId);\nconsole.log('User Name:', userName);\nconsole.log('User Email:', userEmail);",
              "err": {},
              "uuid": "e4f4af93-8359-4879-978c-e9ff22438706",
              "parentUUID": "a7ced3bb-f2d2-48c0-a4ab-a917f0b97dfc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a0e5cab6-b526-4b60-ac39-689333b4eb35",
              "title": "Positive - GET selected user details",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 200",
                  "fullTitle": "Negative - Post New User Positive - GET selected user details Response status equal to 200",
                  "timedOut": false,
                  "duration": 377,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n      .get(`/public/v2/users/${userId}?access-token=${TOKEN}`)\nexpect(response.status).to.equal(200)",
                  "err": {},
                  "uuid": "3fb71668-5b05-433c-aee3-5ce82fe9e542",
                  "parentUUID": "a0e5cab6-b526-4b60-ac39-689333b4eb35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fb71668-5b05-433c-aee3-5ce82fe9e542"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 377,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a15b43bc-458b-4bdc-9f73-053d2974eba8",
              "title": "Negative - GET selected user details",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 404",
                  "fullTitle": "Negative - Post New User Negative - GET selected user details Response status equal to 404",
                  "timedOut": false,
                  "duration": 288,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n      .get(`/public/v2/users/12345?access-token=${TOKEN}`)\nexpect(response.status).to.equal(404)",
                  "err": {},
                  "uuid": "2671b4ac-f6ad-4b52-81df-32f7947117c7",
                  "parentUUID": "a15b43bc-458b-4bdc-9f73-053d2974eba8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2671b4ac-f6ad-4b52-81df-32f7947117c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 288,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7e210f21-c8ba-407a-aa09-de0b356cfb36",
              "title": "Positive - PUT selected user details",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 200",
                  "fullTitle": "Negative - Post New User Positive - PUT selected user details Response status equal to 200",
                  "timedOut": false,
                  "duration": 295,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n  .put(`/public/v2/users/${userId}?access-token=${TOKEN}`)\n  .send({\n    \"email\": \"usertest007@mail.com\",\n    \"name\": \"USER TEST7\",\n    \"gender\": \"male\",\n    \"status\": \"inactive\"\n});\n  expect(response.status).to.equal(200)",
                  "err": {},
                  "uuid": "725baf37-60fd-44ec-b54a-c4527c170a59",
                  "parentUUID": "7e210f21-c8ba-407a-aa09-de0b356cfb36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "725baf37-60fd-44ec-b54a-c4527c170a59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 295,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "774481ca-3f08-4226-82ce-414d24bfe54d",
              "title": "Negative - PUT selected user details",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 404",
                  "fullTitle": "Negative - Post New User Negative - PUT selected user details Response status equal to 404",
                  "timedOut": false,
                  "duration": 425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n  .put(`/public/v2/users/${userId}?access-token=${TOKEN}`)\n  .send({\n    \"email\": \"usertest007@mail.com\",\n    \"name\": \"USER TEST7\",\n    \"gender\": \"transgender\",\n    \"status\": \"inactive\"\n});\n  expect(response.status).to.equal(422)",
                  "err": {},
                  "uuid": "149641f3-e4f6-4a3a-8734-4d8f18293f54",
                  "parentUUID": "774481ca-3f08-4226-82ce-414d24bfe54d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "149641f3-e4f6-4a3a-8734-4d8f18293f54"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 425,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cc68bb1a-53ae-44f8-83b6-aea0b9836f7a",
              "title": "Positive - Delete selected user",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 204",
                  "fullTitle": "Negative - Post New User Positive - Delete selected user Response status equal to 204",
                  "timedOut": false,
                  "duration": 254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n.delete(`/public/v2/users/${userId}?access-token=${TOKEN}`)\nexpect(response.status).to.equal(204)",
                  "err": {},
                  "uuid": "6068350e-810d-417f-b8b0-a68ebb124d07",
                  "parentUUID": "cc68bb1a-53ae-44f8-83b6-aea0b9836f7a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6068350e-810d-417f-b8b0-a68ebb124d07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 254,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "86e785d4-1341-425c-bb2b-df447a858070",
              "title": "Negative - Delete selected user",
              "fullFile": "C:\\Users\\user\\Documents\\BNIassesment\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status equal to 404",
                  "fullTitle": "Negative - Post New User Negative - Delete selected user Response status equal to 404",
                  "timedOut": false,
                  "duration": 274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request(url)\n.delete(`/public/v2/users/${userId}?access-token=${TOKEN}`)\nexpect(response.status).to.equal(404)",
                  "err": {},
                  "uuid": "e6dc6812-34da-47cd-a43b-f51d4e052fe4",
                  "parentUUID": "86e785d4-1341-425c-bb2b-df447a858070",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6dc6812-34da-47cd-a43b-f51d4e052fe4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e4f4af93-8359-4879-978c-e9ff22438706"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 584,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}